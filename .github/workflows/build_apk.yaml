# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.0.5'
    - run: |
        tag=$(cat pubspec.yaml | grep '^version:' | sed 's/^version:\s*\(.*\)\s*$/\1/g')
        echo "app_tag=$tag" >> $GITHUB_ENV
        echo "Setting app tag as $tag"
        echo "From github ${{ env.app_tag }} "
    - run: flutter pub get
    - run: flutter test
    - run: flutter build apk
    - name: Create Github Release
      uses: ncipollo/release-action@v1
      with:
        commit: ${{ github.sha }}
        tag: ${{ env.app_tag }}
        artifacts: "build/app/outputs/flutter-apk/app-release.apk"

    - name: Save APK to Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: APK
        path: build/app/outputs/flutter-apk/app-release.apk